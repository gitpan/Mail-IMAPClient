The following is a list of some items that I hope to include in a future 
release:

- Support for threaded perl programs (still pending as of version 2.2.0.).

- Better support for converting a message into a structure that is based upon
the message's BODYSTRUCTURE. (This is pretty much there, thanks especially to
Pedro Melo Cunha, who contributed a working version of IMAPClient::BodyStructure, 
and to Damian Conway, who wrote Parse::RecDescent. Support for FETCH ENVELOPE
is a natural extension to support for BODYSTRUCTURE and is now available as well.)

- Currently a number of IMAP Client commands are implemented using the 
'default method', which is an AUTOLOAD hack. I'd like to reduce that if 
possible to a bare minimum. (Some are still pending as of version 2.2.0.)

- I'd like to provide more perlish interfaces, such as the folders method 
which returns an array or a pointer to an array of folder names and which 
has no direct IMAP counterpart. For example, a 'since' method could be 
written to implement the SEARCH SINCE syntax. It would be nice if eventually 
you didn't have to reference RFC2060 to use this module. ** Many of these methods
have been implemented since this was first written. Check the pod! If you think
of one that you don't see now, please let me know.** 

- I'd like to see this module certified for more OS's and more IMAP servers. 
This is (hopefully) just a matter of testing; the code should already be 
compatible with the IMAP servers that are out there and with any OS that 
allows the IO::Socket module to work. ** A number of platforms have been added
to the list of tested platforms since this was first written. Please contact 
David.Kernen@kernengroup.com if you have any to add.

- Support for older/other versions of IMAP. Currently only RFC2060 is 
explicitly supported, although thanks to the 'default method' (implemented 
via an AUTOLOAD hack) virtually any IMAP command is supported, even 
proprietary commands, X- extensions, and so forth. But not necessarily other 
authentication mechanisms... :-( (NOTE: the AUTHENTICATE method 
partially addresses this issue, especially when used in conjuction with 
Mark Bush's Authen::NTLM, which is a solution for NTLM users and a model
for users of other authentication schemes. Please let me know if you implement
some other kind of strong authentication.)

- Support for piping output from (some?) imap commands directly to a 
thingy of some sort (perhaps a coderef, a filehandle, or both). 

- Your thingy here!!! Send me your request, and I'll do it in the order of 
( $popularity/$difficulty ).

- Support for perl version 6. This will probably involve a rewrite that will make
portions of the Mail::IMAPClient module look more like the Mail::IMAPClient::BodyStructure
module. (Perl 6 will have built-in support for semantics that look remarkably like
Damian Conway's Parse::RecDescent module, which will solve a lot of problems for me.)
